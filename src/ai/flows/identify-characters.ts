// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Identifies characters in a script using AI.
 *
 * - identifyCharacters - A function that handles the character identification process.
 * - IdentifyCharactersInput - The input type for the identifyCharacters function.
 * - IdentifyCharactersOutput - The return type for the identifyCharacters function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IdentifyCharactersInputSchema = z.object({
  script: z
    .string()
    .describe('The script content to identify characters from.'),
});
export type IdentifyCharactersInput = z.infer<typeof IdentifyCharactersInputSchema>;

const IdentifyCharactersOutputSchema = z.object({
  characters: z
    .array(z.string())
    .describe('The list of identified characters in the script.'),
  confidenceScores: z
    .array(z.number())
    .describe('The confidence scores for each identified character.'),
});
export type IdentifyCharactersOutput = z.infer<typeof IdentifyCharactersOutputSchema>;

export async function identifyCharacters(input: IdentifyCharactersInput): Promise<IdentifyCharactersOutput> {
  return identifyCharactersFlow(input);
}

const identifyCharactersPrompt = ai.definePrompt({
  name: 'identifyCharactersPrompt',
  input: {schema: IdentifyCharactersInputSchema},
  output: {schema: IdentifyCharactersOutputSchema},
  prompt: `You are an expert in script analysis. Your task is to identify the characters present in the given script.

  Please provide a list of characters and their corresponding confidence scores (between 0 and 1) based on your analysis. Ensure that the output is a JSON object containing 'characters' (an array of character names) and 'confidenceScores' (an array of confidence scores).

  Here is the script:
  {{script}}
  `,
});

const identifyCharactersFlow = ai.defineFlow(
  {
    name: 'identifyCharactersFlow',
    inputSchema: IdentifyCharactersInputSchema,
    outputSchema: IdentifyCharactersOutputSchema,
  },
  async input => {
    const {output} = await identifyCharactersPrompt(input);
    return output!;
  }
);
